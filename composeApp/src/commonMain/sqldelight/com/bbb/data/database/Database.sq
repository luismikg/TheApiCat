PRAGMA user_version = 1;

--SESSION
CREATE TABLE IF NOT EXISTS Session(
    token TEXT NOT NULL PRIMARY KEY
);

getSession:
SELECT * FROM Session;

insertSession:
INSERT OR REPLACE INTO Session(token) VALUES(?);

deleteSession:
DELETE FROM Session;

--FAVORITE
CREATE TABLE IF NOT EXISTS Favorite(
    id TEXT NOT NULL,
    token TEXT NOT NULL,
    name TEXT NOT NULL,
    temperament TEXT NOT NULL,
    image_url TEXT,
    origen TEXT NOT NULL,
    description TEXT NOT NULL,
    wikipedia_url TEXT NOT NULL,
    PRIMARY KEY(token, id)
);

getFavorite:
SELECT * FROM Favorite WHERE token=?;

upsertFavorite:
INSERT OR REPLACE INTO Favorite(id, token, name, temperament, image_url, origen, description, wikipedia_url) VALUES (?, ?, ?, ?, ?, ?, ?, ?);

deleteFavorite:
DELETE FROM Favorite WHERE token=? AND id=?;

-- CACHE
CREATE TABLE IF NOT EXISTS CatBreedsCache(
    id TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    temperament TEXT NOT NULL,
    image_url TEXT NOT NULL,
    origen TEXT NOT NULL,
    description TEXT NOT NULL,
    wikipedia_url TEXT NOT NULL
);

insertCatBreedsCache:
INSERT OR REPLACE INTO CatBreedsCache(id, name, temperament, image_url, origen, description, wikipedia_url) VALUES (?, ?, ?, ?, ?, ?, ?);

getAllCatBreedsCache:
SELECT * FROM CatBreedsCache;

clearAllCatBreedsCache:
DELETE FROM CatBreedsCache;

-- SELECTED
CREATE TABLE IF NOT EXISTS CatBreedsSelected(
    id TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    temperament TEXT NOT NULL,
    image_url TEXT NOT NULL,
    origen TEXT NOT NULL,
    description TEXT NOT NULL,
    wikipedia_url TEXT NOT NULL
);

getOneCatBreedSelected:
SELECT * FROM CatBreedsSelected LIMIT 1;

insertCatBreedsSelected:
INSERT OR REPLACE INTO CatBreedsSelected(id, name, temperament, image_url, origen, description, wikipedia_url) VALUES (?, ?, ?, ?, ?, ?, ?);

clearAllCatBreedsSelected:
DELETE FROM CatBreedsSelected;
